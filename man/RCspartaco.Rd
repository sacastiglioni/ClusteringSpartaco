% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RCspartaco.R
\name{RCspartaco}
\alias{RCspartaco}
\title{SpaRTaCo with Column Cluster assigned}
\usage{
RCspartaco(
  data,
  coordinates = NULL,
  assay = NULL,
  column.labels,
  K = NULL,
  Delta.constr = 10,
  max.iter = 1000,
  estimate.iterations = 100,
  input.values = NULL,
  conv.criterion = list(iterations = 10, epsilon = 1e-04),
  verbose = T,
  verbose.parallel.label = NULL,
  save.options = NULL,
  seed = NULL,
  lambda.mu = 0,
  lambda.tau = 0
)
}
\arguments{
\item{data}{either a `SpatialExperiment` object or a matrix containing the experiment;}

\item{coordinates}{if `is.matrix(data)`, it takes the matrix of spatial coordinates of dimension `ncol(data)` x 2.}

\item{assay}{if `class(data) == "SpatialExperiment"`, it takes either the name or the index of the assay to be used;}

\item{column.labels}{the labels vector of column clusters.}

\item{K}{the number of row clusters (only when `input.values == NULL`).}

\item{Delta.constr}{the constraint on the Delta matrix (default is 10; see **Details**).}

\item{max.iter}{the maximum number of iterations the estimation algorithm is run.}

\item{estimate.iterations}{the maximum number of iterations within each M Step.}

\item{input.values}{the starting points of the estimation process (see **Details**). If passed, the values of `K` is taken from it. The output of a previous model estimation can be passed here.}

\item{conv.criterion}{a list containing the parameters that define a converge criterion (see **Details**).}

\item{verbose}{different ways to display the on-going estimation process (see **Details**).}

\item{verbose.parallel.label}{an additional label that is used to display the on-going estimation process when `verbose == "parallel"`.}

\item{save.options}{a list for specifying the saving parameters (see **Details**).}

\item{seed}{set the interval seed of the function.}

\item{lambda.mu}{ridge penality for mean parameter estimate, (default is 0).}

\item{lambda.tau}{lasso penality for tau parameter estimate, (default is 0).}
}
\value{
An object of class `spartaco` with the parameter estimates, the clustering labels, the log-likelihood value at each iteration and the data, the ICL, the data matrix and the coordinates matrix.
}
\description{
This function returns the estimated model parameters and the row-clustering labels, given column-cluster labels.
}
\details{
`Delta.constr` gives the quantity \deqn{c = \tau_{kr} + \xi_{kr},} where \eqn{\tau_{kr}} and \eqn{\xi_{kr}} are the spatial variance and the nugget effect of block \eqn{(k,r)}.

The algorithm can be initiated from a given set of starting values. To do so, `input.values` receives a list of the form
`list(mu, tau, xi, alpha, beta, phi, Cs)`, where:
- `mu`, `tau`, `xi`, `alpha` and `beta` are `K` x `R` matrices;
- `phi` is a vector of length `R`;
- `Cs` is a vector of length `nrow(data)` containing the row clustering labels;

If the algorithm is initiated from some starting values,  `K` is set automatically according to the input values.
If an object of class `spartaco` is passed to `input.values`, the estimation starts from the final estimate of the previous run (see **Examples**).

If `conv.criterion == NULL`, the algorithm is stopped after `max.iter` itereations, otherwise it is stopped when the increment of the log-likelihood is smaller than a certain threshold `conv.criterion$epsilon` for `conv.criterion$iterations` times in a row.

The function allows also to save the results even if the estimation is not completed. To do so, `save.options` receives a list of two parameters:
`after` gives the number of iterations after which the results are saved, `file.name` contains the path where the results are saved.

If `verbose == "full"`, the on-going estimation procedure is displayed. If `verbose == "progress"`, a dynamic progress bar will display the percentage of iterations completed.
If `verbose == F`, then nothing is displayed in console.
}
