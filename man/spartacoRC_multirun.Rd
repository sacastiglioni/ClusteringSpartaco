% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spartacoRC_multirun.R
\name{spartacoRC_multirun}
\alias{spartacoRC_multirun}
\title{Multiple runs of SpaRTaCo}
\usage{
spartacoRC_multirun(
  data,
  coordinates = NULL,
  assay = NULL,
  column.labels,
  K = NULL,
  nstart = 5,
  Delta.constr = 10,
  max.iter = 1000,
  estimate.iterations = 100,
  conv.criterion = list(iterations = 10, epsilon = 1e-04),
  verbose = T,
  verbose.display.intervals = 10,
  compute.uncertainty = TRUE,
  lambda.ridge = 0,
  lambda.lasso = 0
)
}
\arguments{
\item{data}{either a `SpatialExperiment` object or a matrix containing the experiment;}

\item{coordinates}{if `is.matrix(data)`, it takes the matrix of spatial coordinates of dimension `ncol(data)` x 2.}

\item{assay}{if `class(data) == "SpatialExperiment"`, it takes either the name or the index of the assay to be used;}

\item{K}{the number of row clusters (only when `input.values == NULL`);}

\item{nstart}{the number of parallel runs of the estimation algorithm;}

\item{Delta.constr}{the constraint on the Delta matrix (default is 10; see **Details**).}

\item{max.iter}{the maximum number of iterations the estimation algorithm is run.}

\item{estimate.iterations}{the maximum number of iterations within each M Step.}

\item{conv.criterion}{a list containing the parameters that define a converge criterion (see **Details**).}

\item{verbose}{logical; it `TRUE`, it displays the estimation process through a dynamic progress bar.}

\item{verbose.display.intervals}{integer; if `verbose == T`, the dynamic progress bar is updated after `max.iter/verbose.display.intervals` iterations.}

\item{compute.uncertainty}{if `TRUE` (default), it computes the clustering uncertainty of the rows and of the columns.}

\item{R}{the number of column clusters (only when `input.values == NULL`);}
}
\value{
An object of class `spartaco` with the parameter estimates, the clustering labels, the log-likelihood value at each iteration and the data, the ICL, the data matrix and the coordinates matrix, and the clustering uncertainty.
}
\description{
This function returns the estimated model parameters and the co-clustering labels obtained after running SpaRTaCo multiple times (parallel options available).
}
\details{
This function allows to run the `spartaco` model starting from multiple starting points simultaneously.
It is possible to run this function using multiple cores; to do so, use the `multicore` function package `future` (see **Examples**).

If `verbose == T`, it displays the estimation process through a progress bar. Note that in this case the final output will be based just on the last `max.iter/verbose.display.intervals` iterations.
For details about the rest of the parameters, check [spartaco::spartaco()]
}
\examples{
library(spartaco)

# First, create the data matrix:
n <- p <- 300
K <- R <- 3
x <- matrix(runif(n*p), n, p)
coordinates <- matrix(runif(2*p), p, 2)

# Set the number of cores to be used for the computations. In this example, we use 3 cores.
future::plan(future::multisession(workers = 3))
output <- spartaco(data = x, coordinates = coordinates, K = K, R = R, max.iter = 1000, verbose.display.intervals = 100)

# according to this setup, the progress bar will be updated once every 10 iterations are performed.
}
